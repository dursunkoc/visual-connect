{
  "connectors": {
    "jdbc-sink-customers": {
      "info": {
        "name": "jdbc-sink-customers",
        "config": {
          "connector.class": "io.confluent.connect.jdbc.JdbcSinkConnector",
          "dialect.name": "OracleDatabaseDialect",
          "table.name.format": "CUSTOMERS",
          "connection.password": "dbz",
          "tasks.max": "1",
          "topics": "dbz_oracle.INVENTORY.CUSTOMERS",
          "transforms": "unwrap",
          "delete.enabled": "true",
          "connection.user": "INVENTORY",
          "transforms.unwrap.drop.tombstones": "false",
          "name": "jdbc-sink-customers",
          "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
          "auto.create": "true",
          "connection.url": "jdbc:oracle:thin:@trg_oracle:1521:XE",
          "insert.mode": "upsert",
          "pk.mode": "record_key",
          "pk.fields": "ID"
        },
        "tasks": [
          {
            "connector": "jdbc-sink-customers",
            "task": 0
          }
        ],
        "type": "sink"
      },
      "status": {
        "name": "jdbc-sink-customers",
        "connector": {
          "state": "RUNNING",
          "worker_id": "172.18.0.7:8083"
        },
        "tasks": [
          {
            "id": 0,
            "state": "RUNNING",
            "worker_id": "172.18.0.7:8083"
          }
        ],
        "type": "sink"
      }
    },
    "inventory-source-connector": {
      "info": {
        "name": "inventory-source-connector",
        "config": {
          "connector.class": "io.debezium.connector.oracle.OracleConnector",
          "database.user": "c##logminer",
          "database.dbname": "XE",
          "tasks.max": "1",
          "database.connection.adapter": "logminer",
          "database.history.kafka.bootstrap.servers": "kafka:9092",
          "database.history.kafka.topic": "schema-changes.inventory",
          "database.server.name": "dbz_oracle",
          "database.port": "1521",
          "include.schema.changes": "true",
          "decimal.handling.mode": "double",
          "database.hostname": "dbz_oracle",
          "database.schema": "inventory",
          "database.password": "dbz",
          "name": "inventory-source-connector",
          "database.out.server.name": "dbzxout",
          "database.oracle.version": "11",
          "table.include.list": "INVENTORY.CUSTOMERS, INVENTORY.PRODUCTS",
          "errors.log.enable": "true",
          "snapshot.lock.timeout.ms": "5000",
          "snapshot.mode": "initial"
        },
        "tasks": [
          {
            "connector": "inventory-source-connector",
            "task": 0
          }
        ],
        "type": "source"
      },
      "status": {
        "name": "inventory-source-connector",
        "connector": {
          "state": "RUNNING",
          "worker_id": "172.18.0.7:8083"
        },
        "tasks": [
          {
            "id": 0,
            "state": "RUNNING",
            "worker_id": "172.18.0.7:8083"
          }
        ],
        "type": "source"
      }
    }
  },
  "fonnectors": {
    "jdbc-sink-customers": {
      "info": {
        "name": "jdbc-sink-customers",
        "config": {
          "connector.class": "io.confluent.connect.jdbc.JdbcSinkConnector",
          "dialect.name": "OracleDatabaseDialect",
          "table.name.format": "CUSTOMERS",
          "connection.password": "dbz",
          "tasks.max": "1",
          "topics": "dbz_oracle.INVENTORY.CUSTOMERS",
          "transforms": "unwrap",
          "delete.enabled": "true",
          "connection.user": "INVENTORY",
          "transforms.unwrap.drop.tombstones": "false",
          "name": "jdbc-sink-customers",
          "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
          "auto.create": "true",
          "connection.url": "jdbc:oracle:thin:@trg_oracle:1521:XE",
          "insert.mode": "upsert",
          "pk.mode": "record_key",
          "pk.fields": "ID"
        },
        "tasks": [
          {
            "connector": "jdbc-sink-customers",
            "task": 0
          }
        ],
        "type": "sink"
      },
      "status": {
        "name": "jdbc-sink-customers",
        "connector": {
          "state": "RUNNING",
          "worker_id": "172.18.0.7:8083"
        },
        "tasks": [
          {
            "id": 0,
            "state": "FAILED",
            "worker_id": "172.18.0.7:8083",
            "trace": "org.apache.kafka.connect.errors.ConnectException: Exiting WorkerSinkTask due to unrecoverable exception.\n\tat org.apache.kafka.connect.runtime.WorkerSinkTask.deliverMessages(WorkerSinkTask.java:614)\n\tat org.apache.kafka.connect.runtime.WorkerSinkTask.poll(WorkerSinkTask.java:329)\n\tat org.apache.kafka.connect.runtime.WorkerSinkTask.iteration(WorkerSinkTask.java:232)\n\tat org.apache.kafka.connect.runtime.WorkerSinkTask.execute(WorkerSinkTask.java:201)\n\tat org.apache.kafka.connect.runtime.WorkerTask.doRun(WorkerTask.java:185)\n\tat org.apache.kafka.connect.runtime.WorkerTask.run(WorkerTask.java:234)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\nCaused by: org.apache.kafka.connect.errors.ConnectException: java.sql.SQLException: Exception chain:\njava.sql.BatchUpdateException: ORA-01438: value larger than specified precision allowed for this column\n\njava.sql.SQLDataException: ORA-01438: value larger than specified precision allowed for this column\n\nError : 1438, Position : 490, Sql = merge into \"CUSTOMERS\" using (select :1  \"ID\", :2  \"FIRST_NAME\", :3  \"LAST_NAME\", :4  \"EMAIL\" FROM dual) incoming on(\"CUSTOMERS\".\"ID\"=incoming.\"ID\") when matched then update set \"CUSTOMERS\".\"FIRST_NAME\"=incoming.\"FIRST_NAME\",\"CUSTOMERS\".\"LAST_NAME\"=incoming.\"LAST_NAME\",\"CUSTOMERS\".\"EMAIL\"=incoming.\"EMAIL\" when not matched then insert(\"CUSTOMERS\".\"FIRST_NAME\",\"CUSTOMERS\".\"LAST_NAME\",\"CUSTOMERS\".\"EMAIL\",\"CUSTOMERS\".\"ID\") values(incoming.\"FIRST_NAME\",incoming.\"LAST_NAME\",incoming.\"EMAIL\",incoming.\"ID\"), OriginalSql = merge into \"CUSTOMERS\" using (select ? \"ID\", ? \"FIRST_NAME\", ? \"LAST_NAME\", ? \"EMAIL\" FROM dual) incoming on(\"CUSTOMERS\".\"ID\"=incoming.\"ID\") when matched then update set \"CUSTOMERS\".\"FIRST_NAME\"=incoming.\"FIRST_NAME\",\"CUSTOMERS\".\"LAST_NAME\"=incoming.\"LAST_NAME\",\"CUSTOMERS\".\"EMAIL\"=incoming.\"EMAIL\" when not matched then insert(\"CUSTOMERS\".\"FIRST_NAME\",\"CUSTOMERS\".\"LAST_NAME\",\"CUSTOMERS\".\"EMAIL\",\"CUSTOMERS\".\"ID\") values(incoming.\"FIRST_NAME\",incoming.\"LAST_NAME\",incoming.\"EMAIL\",incoming.\"ID\"), Error Msg = ORA-01438: value larger than specified precision allowed for this column\n\n\n\tat io.confluent.connect.jdbc.sink.JdbcSinkTask.put(JdbcSinkTask.java:122)\n\tat org.apache.kafka.connect.runtime.WorkerSinkTask.deliverMessages(WorkerSinkTask.java:586)\n\t... 10 more\nCaused by: java.sql.SQLException: Exception chain:\njava.sql.BatchUpdateException: ORA-01438: value larger than specified precision allowed for this column\n\njava.sql.SQLDataException: ORA-01438: value larger than specified precision allowed for this column\n\nError : 1438, Position : 490, Sql = merge into \"CUSTOMERS\" using (select :1  \"ID\", :2  \"FIRST_NAME\", :3  \"LAST_NAME\", :4  \"EMAIL\" FROM dual) incoming on(\"CUSTOMERS\".\"ID\"=incoming.\"ID\") when matched then update set \"CUSTOMERS\".\"FIRST_NAME\"=incoming.\"FIRST_NAME\",\"CUSTOMERS\".\"LAST_NAME\"=incoming.\"LAST_NAME\",\"CUSTOMERS\".\"EMAIL\"=incoming.\"EMAIL\" when not matched then insert(\"CUSTOMERS\".\"FIRST_NAME\",\"CUSTOMERS\".\"LAST_NAME\",\"CUSTOMERS\".\"EMAIL\",\"CUSTOMERS\".\"ID\") values(incoming.\"FIRST_NAME\",incoming.\"LAST_NAME\",incoming.\"EMAIL\",incoming.\"ID\"), OriginalSql = merge into \"CUSTOMERS\" using (select ? \"ID\", ? \"FIRST_NAME\", ? \"LAST_NAME\", ? \"EMAIL\" FROM dual) incoming on(\"CUSTOMERS\".\"ID\"=incoming.\"ID\") when matched then update set \"CUSTOMERS\".\"FIRST_NAME\"=incoming.\"FIRST_NAME\",\"CUSTOMERS\".\"LAST_NAME\"=incoming.\"LAST_NAME\",\"CUSTOMERS\".\"EMAIL\"=incoming.\"EMAIL\" when not matched then insert(\"CUSTOMERS\".\"FIRST_NAME\",\"CUSTOMERS\".\"LAST_NAME\",\"CUSTOMERS\".\"EMAIL\",\"CUSTOMERS\".\"ID\") values(incoming.\"FIRST_NAME\",incoming.\"LAST_NAME\",incoming.\"EMAIL\",incoming.\"ID\"), Error Msg = ORA-01438: value larger than specified precision allowed for this column\n\n\n\tat io.confluent.connect.jdbc.sink.JdbcSinkTask.getAllMessagesException(JdbcSinkTask.java:150)\n\tat io.confluent.connect.jdbc.sink.JdbcSinkTask.put(JdbcSinkTask.java:102)\n\t... 11 more\n"
          }
        ],
        "type": "sink"
      }
    },
    "inventory-source-connector": {
      "info": {
        "name": "inventory-source-connector",
        "config": {
          "connector.class": "io.debezium.connector.oracle.OracleConnector",
          "database.user": "c##logminer",
          "database.dbname": "XE",
          "tasks.max": "1",
          "database.connection.adapter": "logminer",
          "database.history.kafka.bootstrap.servers": "kafka:9092",
          "database.history.kafka.topic": "schema-changes.inventory",
          "database.server.name": "dbz_oracle",
          "database.port": "1521",
          "include.schema.changes": "true",
          "decimal.handling.mode": "double",
          "database.hostname": "dbz_oracle",
          "database.schema": "inventory",
          "database.password": "dbz",
          "name": "inventory-source-connector",
          "database.out.server.name": "dbzxout",
          "database.oracle.version": "11",
          "table.include.list": "INVENTORY.CUSTOMERS, INVENTORY.PRODUCTS",
          "errors.log.enable": "true",
          "snapshot.lock.timeout.ms": "5000",
          "snapshot.mode": "initial"
        },
        "tasks": [
          {
            "connector": "inventory-source-connector",
            "task": 0
          }
        ],
        "type": "source"
      },
      "status": {
        "name": "inventory-source-connector",
        "connector": {
          "state": "RUNNING",
          "worker_id": "172.18.0.7:8083"
        },
        "tasks": [
          {
            "id": 0,
            "state": "RUNNING",
            "worker_id": "172.18.0.7:8083"
          }
        ],
        "type": "source"
      }
    }
  }
}